
/**
 * Service for generating content with AI
 */
import { logError } from "../utils/errorHandler.ts";

/**
 * Generate content using DeepSeek API
 */
export async function generateContentWithDeepSeek(
  systemPrompt: string, 
  userPrompt: string, 
  apiKey: string
) {
  try {
    console.log("ü§ñ Calling DeepSeek API...");
    console.log(`üìù System prompt length: ${systemPrompt.length} characters`);
    console.log(`üìù User prompt length: ${userPrompt.length} characters`);
    
    if (!apiKey || apiKey.trim() === '') {
      throw new Error("Missing DeepSeek API key");
    }
    
    // DeepSeek API endpoint
    const apiUrl = "https://api.deepseek.com/v1/chat/completions";
    
    // Ensure system prompt is within acceptable size limits
    // If too large, truncate it to avoid API errors
    const MAX_SYSTEM_PROMPT_LENGTH = 128000; // Increased from 100K to 128K chars to maximize content
    const truncatedSystemPrompt = systemPrompt.length > MAX_SYSTEM_PROMPT_LENGTH
      ? systemPrompt.substring(0, MAX_SYSTEM_PROMPT_LENGTH) + "... [TRUNCATED DUE TO LENGTH]"
      : systemPrompt;
    
    if (systemPrompt.length !== truncatedSystemPrompt.length) {
      console.warn(`‚ö†Ô∏è System prompt was truncated from ${systemPrompt.length} to ${truncatedSystemPrompt.length} characters`);
    }
    
    // Prepare the request
    const payload = {
      model: "deepseek-chat",
      messages: [
        {
          role: "system",
          content: truncatedSystemPrompt
        },
        {
          role: "user",
          content: userPrompt
        }
      ],
      temperature: 0.7,
      max_tokens: 6000  // Increased from 4000 to 6000 for more content
    };
    
    // Debug the payload size
    const payloadSize = JSON.stringify(payload).length;
    console.log(`üì¶ DeepSeek API payload size: ${payloadSize} bytes`);
    
    if (payloadSize > 1000000) {
      console.warn(`‚ö†Ô∏è DeepSeek API payload is very large (${payloadSize} bytes), which might cause issues`);
    }
    
    // Make the request to DeepSeek API with proper headers and timeout
    let controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 120000); // 120 second timeout (increased from 60s)
    
    try {
      // Make the request to DeepSeek API with proper headers
      const response = await fetch(apiUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": `Bearer ${apiKey}`
        },
        body: JSON.stringify(payload),
        signal: controller.signal
      });
      
      clearTimeout(timeoutId);
      
      // Log the response status
      console.log(`üîÑ DeepSeek API response status: ${response.status}`);
      
      // Handle possible error responses
      if (!response.ok) {
        let errorData;
        try {
          errorData = await response.text();
          console.error(`‚ùå DeepSeek API error (${response.status}): ${errorData}`);
        } catch (readError) {
          errorData = `Could not read error response: ${readError.message}`;
          console.error(`‚ùå DeepSeek API error (${response.status}): Failed to read error response`);
        }
        
        if (response.status === 401) {
          throw new Error("DeepSeek API key is invalid or expired. Please check your API key.");
        } else if (response.status === 429) {
          throw new Error("DeepSeek API rate limit exceeded. Please try again later.");
        } else if (response.status === 413) {
          throw new Error("DeepSeek API request too large. The system prompt needs to be reduced.");
        } else {
          throw new Error(`DeepSeek API error: ${response.status} - ${errorData}`);
        }
      }
      
      // Process the successful response
      const data = await response.json();
      
      if (!data.choices || data.choices.length === 0) {
        console.error("‚ùå No content generated by DeepSeek");
        return "Error: Unable to generate content. Please try again later.";
      }
      
      const generatedContent = data.choices[0].message.content;
      console.log(`‚úÖ Content generated successfully (${generatedContent.length} characters)`);
      
      return generatedContent;
    } catch (fetchError) {
      if (fetchError.name === 'AbortError') {
        console.error("‚ùå DeepSeek API request timed out after 120 seconds");
        throw new Error("Request to DeepSeek API timed out. Please try again later.");
      }
      throw fetchError;
    }
  } catch (error) {
    // Improve error handling to provide better error messages
    let errorMessage = "Failed to generate content with DeepSeek.";
    
    if (error instanceof Error) {
      errorMessage = error.message;
      
      // Add more specific error messages
      if (errorMessage.includes("fetch failed")) {
        errorMessage = "Network error when connecting to DeepSeek. Please check your internet connection.";
      } else if (errorMessage.includes("timeout")) {
        errorMessage = "Request to DeepSeek timed out. The service might be experiencing high load.";
      }
    }
    
    logError(error, "Error calling DeepSeek API");
    console.error(`‚ùå DeepSeek API error: ${errorMessage}`);
    
    // Return a formatted error message that can be used in the blog post
    return `# Error Generating Content\n\nThere was a problem connecting to our AI service: ${errorMessage}\n\nPlease try again later.`;
  }
}
